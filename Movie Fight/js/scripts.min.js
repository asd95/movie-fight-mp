function createAutoComplete({root:e,onRenderOption:t,onOptionSelect:s,inputValue:a,fetchData:i}){e.innerHTML='\n  <h1 class="title-movie-search">Search</h1>\n    <input type="text" class="input">\n    <ul class="dropdown-menu">\n    </ul>\n';const n=e.querySelector(".input"),l=e.querySelector(".dropdown-menu");n.addEventListener("input",deBounce(async e=>{try{const o=await i(e.target.value);o.length>0?l.classList.add("show"):l.classList.remove("show"),l.innerHTML="",o.forEach(e=>{const i=function(e,t){const i=document.createElement("li"),o=document.createElement("a");return o.classList.add("dropdown-item"),o.innerHTML=e(t),o.addEventListener("click",()=>function(e){l.classList.remove("show"),n.value=a(e),s(e)}(t)),i.appendChild(o),i}(t,e);l.appendChild(i)})}catch(e){throw new Error(e)}},500)),document.addEventListener("click",t=>{l.classList.contains("show")&&(e.contains(t.target)||l.classList.remove("show"))})}const autoCompleteConfig={onRenderOption:e=>{const{Poster:t,Title:s}=e;return`\n      <img src = "${"N/A"===t?"":t}" />\n      ${s}\n      `},inputValue:e=>e.Title,fetchData:e=>getData("s",e).then(e=>e.Error?[]:e.Search)};let sideLeft,sideRight;async function onMovieSelect(e,t,s){const a=await getData("i",e.imdbID).then(e=>e),i=t;i.innerHTML="",i.innerHTML=createMovieTemplate(a),"left"===s?sideLeft=a:sideRight=a,sideLeft&&sideRight&&runComparision()}function runComparision(){const e=document.querySelectorAll(".left-summary .list-group-item"),t=document.querySelectorAll(".right-summary .list-group-item");e.forEach((e,s)=>{const a=t[s],i=Number(e.dataset.value),n=Number(a.dataset.value);e.classList.remove(...e.classList),e.classList.add("list-group-item","primary"),a.classList.remove(...a.classList),a.classList.add("list-group-item","primary"),i<n?(e.classList.add("less"),a.classList.add("more")):i>n?(e.classList.add("more"),a.classList.add("less")):i===n&&(e.classList.add("equal"),a.classList.add("equal"))})}function createMovieTemplate(e){const t=e.Awards.split(" ").reduce((e,t)=>{const s=parseInt(t);return isNaN(s)?e:e+s},0),s=parseInt(e.BoxOffice.replace(/\$/g,"").replace(/,/g,"")),a=parseInt(e.Metascore),i=parseFloat(e.imdbRating),n=parseInt(e.imdbVotes.replace(/,/g,""));return`\n  <div class="card mb-3">\n    <div class="row g-0">\n      <div class=" col-12 col-sm-4 d-flex justify-content-center">\n        <img src="${e.Poster}" class="img-fluid rounded-start" alt="...">\n      </div>\n      <div class="col-12 col-sm-8">\n        <div class="card-body">\n          <h5 class="card-title">${e.Title}</h5>\n          <p class="card-text">${e.Genre}</p>\n          <p class="card-text"><small class="text-muted">${e.Plot}</small></p>\n        </div>\n      </div>\n    </div>\n    <ul class="list-group list-group-flush">\n      <li data-value=${t} class="list-group-item primary"><p class="name">Awards:</p><p class="detail-st">${e.Awards}</p></li>\n      <li data-value=${s} class="list-group-item primary"><p class="name">Box Office:</p><p class="detail-st">${e.BoxOffice}</p></li>\n      <li data-value=${a} class="list-group-item primary"><p class="name">Meta score:</p><p class="detail-st">${e.Metascore}</p></li>\n      <li data-value=${i} class="list-group-item primary"><p class="name">IMDb Rating:</p><p class="detail-st">${e.imdbRating}</p></li>\n      <li data-value=${n} class="list-group-item primary"><p class="name">IMDb Votes:</p><p class="detail-st">${e.imdbVotes}</p></li>\n    </ul>\n  </div>\n  `}async function getData(e,t){const s=await fetch(`https://www.omdbapi.com/?${e}=${t}&apikey=5b10b9a3`);if(!s.ok)throw new Error(`Could not fetch ${s.url}, received ${s.status}`);return s.json()}function deBounce(e,t=1e3){let s;return(...a)=>{s&&clearTimeout(s),s=setTimeout(()=>{e.call(null,...a)},t)}}createAutoComplete({...autoCompleteConfig,root:document.querySelector(".left-autocomplete"),onOptionSelect:e=>{document.querySelector(".notification").classList.add("ntf-hidden"),onMovieSelect(e,document.querySelector(".left-summary"),"left")}}),createAutoComplete({...autoCompleteConfig,root:document.querySelector(".right-autocomplete"),onOptionSelect:e=>{document.querySelector(".notification").classList.add("ntf-hidden"),onMovieSelect(e,document.querySelector(".right-summary","right"))}});